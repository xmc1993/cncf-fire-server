<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cncf.dao.BtcDao">

    <sql id="fields">
        id,
        btcName,
        shortName,
        serialNumber,
        btcBrief,
        connection
    </sql>

    <!--   <sql id="Example_Where_Clause">
           <where>
               <foreach collection="oredCriteria" item="criteria" separator="or">
                   <if test="criteria.valid">
                       <trim prefix="(" prefixOverrides="and" suffix=")">
                           <foreach collection="criteria.criteria" item="criterion">
                               <choose>
                                   <when test="criterion.noValue">
                                       and ${criterion.condition}
                                   </when>
                                   <when test="criterion.singleValue">
                                       and ${criterion.condition} #{criterion.value}
                                   </when>
                                   <when test="criterion.betweenValue">
                                       and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                   </when>
                                   <when test="criterion.listValue">
                                       and ${criterion.condition}
                                       <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                           #{listItem}
                                       </foreach>
                                   </when>
                               </choose>
                           </foreach>
                       </trim>
                   </if>
               </foreach>
           </where>
       </sql>
       <sql id="Update_By_Example_Where_Clause">
           <where>
               <foreach collection="example.oredCriteria" item="criteria" separator="or">
                   <if test="criteria.valid">
                       <trim prefix="(" prefixOverrides="and" suffix=")">
                           <foreach collection="criteria.criteria" item="criterion">
                               <choose>
                                   <when test="criterion.noValue">
                                       and ${criterion.condition}
                                   </when>
                                   <when test="criterion.singleValue">
                                       and ${criterion.condition} #{criterion.value}
                                   </when>
                                   <when test="criterion.betweenValue">
                                       and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                   </when>
                                   <when test="criterion.listValue">
                                       and ${criterion.condition}
                                       <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                           #{listItem}
                                       </foreach>
                                   </when>
                               </choose>
                           </foreach>
                       </trim>
                   </if>
               </foreach>
           </where>
       </sql>-->

    <resultMap id="btc" type="com.cncf.entity.Btc">
        <id column="id" property="id"/>
        <id column="btcName" property="btcName"/>
        <id column="shortName" property="shortName"/>
        <id column="serialNumber" property="serialNumber"/>
        <id column="btcBrief" property="btcBrief"/>
        <id column="connection" property="connection"/>
    </resultMap>

    <insert id="insertBtc" parameterType="com.cncf.entity.Btc" keyProperty="id"
            useGeneratedKeys="true">
        insert into btc(
        <include refid="fields"></include>
        )
        VALUES
        (
        #{id},
        #{btcName},
        #{shortName},
        #{serialNumber},
        #{btcBrief},
        #{connection}
        )
    </insert>

    <select id="selectAllBtc" resultType="com.cncf.entity.Btc">
        SELECT
        <include refid="fields"></include>
        FROM btc
    </select>

    <select id="selectBtcById" resultType="com.cncf.entity.Btc">
        SELECT
        <include refid="fields"></include>
        FROM btc
        WHERE id = #{0}
    </select>

<!--    <update id="updateBtcSelective" parameterType="com.cncf.entity.Btc">
        update btc
        <set>
        <if test="btcName!=null and btcName!=''">
            btcName = #{btcName},
        </if>
        <if test="shortName!=null and shortName!=''">
            shortName = #{shortName},
        </if>
        <if test="serialNumber!=null and serialNumber!=''">
            serialNumber = #{serialNumber},
        </if>
        <if test="btcBrief!=null and btcBrief!=''">
            btcBrief = #{btcBrief},
        </if>
        <if test="connection!=null and connection!=''">
            connection = #{connection},
        </if>
        </set>
        where
        id=#{id}
    </update>-->

    <update id="updateBtc" parameterType="com.cncf.entity.Btc">
        update btc
        <set>
            btcName = #{btcName},
            shortName = #{shortName},
            serialNumber = #{serialNumber},
            btcBrief = #{btcBrief},
            connection = #{connection}
        </set>
        where
        id=#{id}
    </update>

    <delete id="deleteBtc" parameterType="java.lang.Integer" >
        delete from btc WHERE id=#{id}
    </delete>

</mapper>